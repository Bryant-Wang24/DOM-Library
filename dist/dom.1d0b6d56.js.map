{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    // 增\r\n    create(string) {//用于创建节点\r\n        const container = document.createElement(\"template\")\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node, node2) {//用于新增弟弟\r\n        node.parentNode.insertBefore(node2, node.nextSibling)\r\n    },\r\n    before(node, node2) {//用于新增哥哥\r\n        node.parentNode.insertBefore(node2, node)\r\n    },\r\n    append(parent, node) {//用于新增儿子\r\n        parent.appendChild(node)\r\n    },\r\n    wrap(node, parent) {//用于新增爸爸\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n    },\r\n\r\n    // 删\r\n    remove(node) {//用于删除节点\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n    empty(node) {//用于删除后代\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n\r\n    // 改\r\n    attr(node, name, value) {//用于读写属性\r\n        if (arguments.length === 3) {// 重载。长度为2时，设置属性；长度为3时，读取属性\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name)\r\n        }\r\n    },\r\n    text(node, string) {//用于读写文本内容\r\n        if (arguments.length === 2) {\r\n            // 适配\r\n            if ('innerText' in node) {\r\n                node.innerText = string//ie\r\n            } else {\r\n                node.textContent = string//Firefox Chrome\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node, string) {//用于读写HTML内容\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {//用于修改style\r\n        if (arguments.length === 3) {\r\n            // dom.style(div,'color','red')\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                // dom.style(div,'color')\r\n                return node.style[name]//也可以写成node.style.name\r\n            } else if (name instanceof Object) {\r\n                // dom.style(div,{color:'red'})\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class: {//用于添加class\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {//用于删除class\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {//判断节点是否存在class\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {//用于添加事件舰监听\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {//用于删除事件监听\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n\r\n    // 查\r\n    find(selector, scope) {//用于获取标签或标签们\r\n        // 如果有scope就在scope中查找；如果没有scope，就在document中查找\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {//用于获取父元素\r\n        return node.parentNode\r\n    },\r\n    children(node) {//用于获取子元素\r\n        return node.children\r\n    },\r\n    siblings(node) {//用于获取兄弟姐妹\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },\r\n    next(node) {//用于获取弟弟（下一个节点）\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node) {//用于获取哥哥（上一个节点）\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList, fn) {//遍历所有节点\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    },\r\n}\r\n"]}